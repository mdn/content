sidebar:
  - type: section
    link: /WebAssembly
    title: WebAssembly_home_page

  - title: Tutorials
    details: open
    children:
      - link: /WebAssembly/Concepts
        title: WebAssembly_concepts
      - link: /WebAssembly/C_to_wasm
        title: Compiling_to_wasm
      - link: /WebAssembly/Rust_to_wasm
        title: Compiling_rust_to_wasm
      - link: /WebAssembly/Using_the_JavaScript_API
        title: JavaScript_API
      - link: /WebAssembly/Understanding_the_text_format
        title: Text_format
      - link: /WebAssembly/Text_format_to_wasm
        title: Text_format_to_wasm
      - link: /WebAssembly/Loading_and_running
        title: Loading_and_running
      - link: /WebAssembly/Exported_functions
        title: Exported_functions

  - title: JavaScript_interface
    details: open
    children:
      - link: /WebAssembly/JavaScript_interface
        code: true
      - link: /WebAssembly/JavaScript_interface/Module
        code: true
      - link: /WebAssembly/JavaScript_interface/Global
        code: true
      - link: /WebAssembly/JavaScript_interface/Instance
        code: true
      - link: /WebAssembly/JavaScript_interface/Memory
        code: true
      - link: /WebAssembly/JavaScript_interface/Table
        code: true
      - link: /WebAssembly/JavaScript_interface/Tag
        code: true
      - link: /WebAssembly/JavaScript_interface/Exception
        code: true
      - link: /WebAssembly/JavaScript_interface/CompileError
        code: true
      - link: /WebAssembly/JavaScript_interface/LinkError
        code: true
      - link: /WebAssembly/JavaScript_interface/RuntimeError
        code: true

l10n:
  en-US:
    WebAssembly_home_page: WebAssembly home page
    Tutorials: Tutorials
    WebAssembly_concepts: WebAssembly concepts
    Compiling_to_wasm: Compiling from C/C++ to WebAssembly
    Compiling_rust_to_wasm: Compiling from Rust to WebAssembly
    JavaScript_API: Using the WebAssembly JavaScript API
    Text_format: Understanding WebAssembly text format
    Text_format_to_wasm: Converting WebAssembly text format to wasm
    Loading_and_running: Loading and running WebAssembly code
    Exported_functions: Exported WebAssembly functions
    JavaScript_interface: JavaScript interface
  fr:
    WebAssembly_home_page: Page d'accueil WebAssembly
    Tutorials: Tutoriels
    WebAssembly_concepts: Concepts WebAssembly
    Compiling_to_wasm: Compiler du C/C++ en WebAssembly
    Compiling_rust_to_wasm: Compiler du Rust en WebAssembly
    JavaScript_API: Utiliser l'API JavaScript WebAssembly
    Text_format: Comprendre le format texte WebAssembly
    Text_format_to_wasm: Convertir du format texte WebAssembly en wasm
    Loading_and_running: Chargement et exécution de code WebAssembly
    Exported_functions: Fonctions WebAssembly exportées
    JavaScript_interface: JavaScript interface
  ko:
    WebAssembly_home_page: 웹어셈블리 홈페이지
    Tutorials: 자습서
    WebAssembly_concepts: 웹어셈블리의 개념
    Compiling_to_wasm: C/C++ 모듈을 웹어셈블리로 컴파일하기
    Compiling_rust_to_wasm: Rust를 웹어셈블리로 컴파일하기
    JavaScript_API: 웹어셈블리 JavaScript API 사용하기
    Text_format: 웹어셈블리 텍스트 형식 이해하기
    Text_format_to_wasm: 웹어셈블리 기반 텍스트를 wasm 형식으로 변환하기
    Loading_and_running: 웹어셈블리 코드 로딩하고 실행하기
    Exported_functions: 내보낸 웹어셈블리(Exported WebAssembly) 함수
    JavaScript_interface: JavaScript 인터페이스
  ru:
    WebAssembly_home_page: WebAssembly
    Tutorials: Уроки
    WebAssembly_concepts: Основы WebAssembly
    Compiling_to_wasm: Компиляция кода C/C++ в WebAssembly
    Compiling_rust_to_wasm: Компиляция Rust в WebAssembly
    JavaScript_API: Использование WebAssembly JavaScript API
    Text_format: Описание текстового формата WebAssembly
    Text_format_to_wasm: Перевод из текстового формата WebAssembly в wasm
    Loading_and_running: Загрузка и запуск кода WebAssembly
    Exported_functions: Экспортируемые функции WebAssembly
    JavaScript_interface: JavaScript interface
  zh-CN:
    WebAssembly_home_page: WebAssembly
    Tutorials: 教程
    WebAssembly_concepts: WebAssembly 概念
    Compiling_to_wasm: 将 C/C++ 编译为 WebAssembly
    Compiling_rust_to_wasm: 将 Rust 编译为 WebAssembly
    JavaScript_API: 使用 WebAssembly JavaScript API
    Text_format: 理解 WebAssembly 文本格式
    Text_format_to_wasm: 将 WebAssembly 文本格式转换为 wasm
    Loading_and_running: 加载和运行 WebAssembly 代码
    Exported_functions: 导出的 WebAssembly 函数
    JavaScript_interface: JavaScript 接口
